) %>%
table_cell_font(row = 1, col = 1:2, color = "red") %>%
table_cell_font(row = 2, col = 1:2, color = "black") %>%
table_cell_font(row = 3:7, col = 1:2, color = "blue")
# include legend as one of the plots
gg_nets_centr[["legend"]] <- pers_legend
# output this plot
ggsave(#filename = "output/Didier/BigPaper/Fig_networks_categorised.pdf",
filename = "output/Fig_networks_categorised.jpg",
arrangeGrob(arrangeGrob(grobs = gg_nets_split
, left = textGrob("Split", gp = gpar(col = "black", fontsize = 20)), ncol = 4)
, arrangeGrob(grobs = gg_nets_even
, left = textGrob("Even", gp = gpar(col = "black", fontsize = 20)), ncol = 4)
, arrangeGrob(grobs = gg_nets_dens
, left = textGrob("Dense\ncentre", gp = gpar(col = "black", fontsize = 20)), ncol = 4)
, arrangeGrob(grobs = gg_nets_centr
, left = textGrob("Centralised", gp = gpar(col = "black", fontsize = 20)), ncol = 4)
, ncol = 1)
, units = "cm", width = 50, height = 60, dpi = 600
, device = "jpeg"
# , device = "pdf"
)
#######################
#### load packages ####
#######################
library(igraph)
library(ggraph)
library(ggpubr)
library(tidyverse)
library(magrittr)
library(data.table)
library(FactoMineR)
library(factoextra)
library(corrplot)
library(ggcorrplot)
library(lubridate)
library(gridExtra)
library(gtable)
library(grid)
library(ggplotify)
library(scales)
###################
#### read data ####
###################
# list_ward <- read_csv("input/Private/list_ward_complete.csv")
# admission <- read_csv("input/Private/id_function_complete.csv")
list_ward <- read_csv("input/list_ward_partial.csv")
admission <- read_csv("input/id_function_partial.csv")
pers_symb <- read_csv("input/personnel_symbols.csv")
pers_symb_lab <- read_csv("input/personnel_symbols_label.csv")
# visual categorisation of ward networks
vis <- read_csv("input/visCat.csv")
# ward labels
Label_tib <- read_csv("input/newID_order.csv")
#########################
#### prepare objects ####
#########################
cats <- admission$catHosp %>% unique %>% sort
cats <- c("patient", "visitor", cats[cats != "investigation"], "investigation") %>% unique
stats <- c("PA", "V", "PE")
color_man_nb = c(PA = "red", V = "black", PE = "blue", ALL = "grey")
admission_types = admission %>%
transmute(id, status, catHosp = factor(catHosp, cats))
# removes the investigator category, from list_ward and from admission
invest = unique(admission$id[which(admission$catHosp=="investigation")])
lines = which(admission$id %in% invest)
if(length(lines)!=0)admission = admission[-lines,]
################################
#### pivot the contact data ####
################################
list_ward_thisthat <- list_ward %>%
left_join(admission_types %>% rename_all(function(x) paste0(x, "_from")), by = c("from" = "id_from")) %>%
left_join(admission_types %>% rename_all(function(x) paste0(x, "_to")), by = c("to" = "id_to")) %>%
filter(catHosp_from != "investigation", catHosp_to != "investigation") %>%
mutate(across(starts_with("status"), ~factor(.x, levels = stats))) %>%
group_by(newID, wardType, from, to, status_from, status_to, catHosp_from, catHosp_to) %>% #first, aggregate contacts which occurred between the same people on the same day
summarise(dur_mins = sum(length)/60)%>%
pivot_longer(cols = c("from", "to"), names_to = "direction", values_to = "id") %>% #then lengthen the table so that each contact counts for both parties
mutate(this_status = case_when(direction == "from" ~ status_from
, direction == "to" ~ status_to)
, that_status = case_when(direction == "from" ~ status_to
, direction == "to" ~ status_from)
, this_catHosp = case_when(direction == "from" ~ catHosp_from
, direction == "to" ~ catHosp_to)
, that_catHosp = case_when(direction == "from" ~ catHosp_to
, direction == "to" ~ catHosp_from))
list_ward_thisthat
list_ward_thisthat %>%
filter(direction == "from")
list_ward_thisthat %>%
filter(direction == "from") %>%
group_by(newID, id) %>%
summarise(n = n())
list_ward_thisthat %>%
filter(direction == "from") %>%
group_by(newID, id) %>%
summarise(n = n()) %>%
ggplot(aes(x = newID, y = n)) + geom_boxplot()
contact_hours = list_ward_thisthat %>%
group_by(newID, id) %>%
summarise(dur_mins = sum(dur_mins)) %>%
mutate(hours_in_contact = dur_mins/60)
list_ward_thisthat %>%
filter(direction == "from") %>%
group_by(newID, id) %>%
summarise(n = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = n*24/(hours_in_contact)) %>%
ggplot(aes(x = newID, y = contacts_per_day)) + geom_boxplot()
list_ward_thisthat %>%
filter(direction == "from") %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
# y = contacts_per_day
y = total_contacts
)) +
geom_boxplot()
Label_tib
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
# y = contacts_per_day
y = total_contacts
)) +
geom_boxplot()
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot()
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_blank) +
labs(x = "", y= "Nombre de contacts / jour (mesuré)")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_blank()) +
labs(x = "", y= "Nombre de contacts / jour (mesuré)")
list_ward_thisthat %>%
# filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_blank()) +
labs(x = "", y= "Nombre de contacts / jour (mesuré)")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_blank()) +
labs(x = "", y= "Nombre de contacts / jour (mesuré)")
list_ward_thisthat %>%
filter(direction == "to") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_blank()) +
labs(x = "", y= "Nombre de contacts / jour (mesuré)")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_blank()) +
labs(x = "", y= "Nombre de contacts / jour (mesuré)")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
# y = contacts_per_day
y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_blank()) +
labs(x = "", y= "Nombre de contacts / jour (mesuré)")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_blank()) +
labs(x = "", y= "Nombre de contacts / jour (mesuré)")
contact_hours
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_blank()) +
labs(x = "", y= "Nombre de contacts / 24h (mesuré)")
getwd()
ggsave("~/nodscov2_networkAnalysis/output/Didier/Buzz/FigureA.pdf", device = "pdf", width = 20, height = 15, units = "cm")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45)) +
labs(x = "", y= "Nombre de contacts / 24h (mesuré)")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y= "Nombre de contacts / 24h (mesuré)")
list_ward
list_ward <- read_csv("input/Private/list_ward_complete.csv")
admission <- read_csv("input/Private/id_function_complete.csv")
pers_symb <- read_csv("input/personnel_symbols.csv")
pers_symb_lab <- read_csv("input/personnel_symbols_label.csv")
# visual categorisation of ward networks
vis <- read_csv("input/visCat.csv")
# ward labels
Label_tib <- read_csv("input/newID_order.csv")
cats <- admission$catHosp %>% unique %>% sort
cats <- c("patient", "visitor", cats[cats != "investigation"], "investigation") %>% unique
stats <- c("PA", "V", "PE")
color_man_nb = c(PA = "red", V = "black", PE = "blue", ALL = "grey")
admission_types = admission %>%
transmute(id, status, catHosp = factor(catHosp, cats))
# removes the investigator category, from list_ward and from admission
invest = unique(admission$id[which(admission$catHosp=="investigation")])
lines = which(admission$id %in% invest)
if(length(lines)!=0)admission = admission[-lines,]
list_ward_thisthat <- list_ward %>%
left_join(admission_types %>% rename_all(function(x) paste0(x, "_from")), by = c("from" = "id_from")) %>%
left_join(admission_types %>% rename_all(function(x) paste0(x, "_to")), by = c("to" = "id_to")) %>%
filter(catHosp_from != "investigation", catHosp_to != "investigation") %>%
mutate(across(starts_with("status"), ~factor(.x, levels = stats))) %>%
group_by(newID, wardType, from, to, status_from, status_to, catHosp_from, catHosp_to) %>% #first, aggregate contacts which occurred between the same people on the same day
summarise(dur_mins = sum(length)/60)%>%
pivot_longer(cols = c("from", "to"), names_to = "direction", values_to = "id") %>% #then lengthen the table so that each contact counts for both parties
mutate(this_status = case_when(direction == "from" ~ status_from
, direction == "to" ~ status_to)
, that_status = case_when(direction == "from" ~ status_to
, direction == "to" ~ status_from)
, this_catHosp = case_when(direction == "from" ~ catHosp_from
, direction == "to" ~ catHosp_to)
, that_catHosp = case_when(direction == "from" ~ catHosp_to
, direction == "to" ~ catHosp_from))
contact_hours = list_ward_thisthat %>%
group_by(newID, id) %>%
summarise(dur_mins = sum(dur_mins)) %>%
mutate(hours_in_contact = dur_mins/60)
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y= "Nombre de contacts / 24h (mesuré)")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
# y = contacts_per_day
y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y= "Nombre de contacts / 24h (mesuré)")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y= "Nombre de contacts / 24h (mesuré)")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
# y = contacts_per_day
y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y= "Nombre de contacts / 24h (mesuré)")
# y = total_contacts
)) +
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
# y = contacts_per_day
y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y= "Nombre de contacts / 24h (mesuré)")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y= "Nombre de contacts / 24h (mesuré)")
list_ward_thisthat %>%
filter(direction == "to") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y= "Nombre de contacts / 24h (mesuré)")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y= "Nombre de contacts / 24h (mesuré)")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
# y = contacts_per_day
y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "",
# y= "Nombre de contacts / 24h (mesuré)"
y= "Nombre de contacts (mesuré)"
)
ggsave("~/nodscov2_networkAnalysis/output/Didier/Buzz/FigureA_total.pdf", device = "pdf", width = 20, height = 15, units = "cm")
list_ward_thisthat %>%
filter(direction == "from") %>%
mutate(newID = factor(newID, levels = Label_tib$newID)) %>%
group_by(newID, id) %>%
summarise(total_contacts = n()) %>%
left_join(contact_hours) %>%
mutate(contacts_per_day = total_contacts*24/(hours_in_contact)) %>%
ggplot(aes(x = newID,
y = contacts_per_day
# y = total_contacts
)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "",
y= "Nombre de contacts / 24h (mesuré)"
# y= "Nombre de contacts / personne (mesuré)"
)
ggsave("~/nodscov2_networkAnalysis/output/Didier/Buzz/FigureA_perday.pdf", device = "pdf", width = 20, height = 15, units = "cm")
