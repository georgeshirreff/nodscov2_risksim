rbind(complete_DR_gen %>% mutate(this_status = "ALL", that_status = "ALL")
, complete_DR_thisstatus %>% mutate(that_status = "ALL")
, complete_DR_status) %>%
# left_join(newID_COVIDstat %>%
#             transmute(ward_id
#                       , newname = newID
#                       # , newname = paste0(newID, "\n(", COVIDstat, ")")
#                       ) %>%
#             mutate(newname = factor(newname, levels = newname))) %>%
mutate_at(c("this_status", "that_status"), function(x) factor(x, levels = c("ALL", "PA", "V", "PE"))) %>%
# mutate_at(c("this_status", "that_status"), function(x) factor(x, labels = c("All", "Patients", "Visitors", "HCWs"))) %>%
mutate_at(c("that_status"), function(x) factor(x, labels = c("All", "Patients", "Visitors", "HCWs"))) %>%
mutate_at(c("this_status"), function(x) factor(x, labels = paste0("Index case = ", c("any", "patient", "visitor", "healthcare worker")))) %>%
ggplot(aes(x = newID, y = daily_risk, fill = that_status)) + geom_bar(stat = "identity", position = "dodge") +
facet_grid(this_status~.) +
scale_fill_manual(values = c(All = "grey70", Patients = "red", Visitors = "black", HCWs = "blue")) +
theme_bw() +
labs(x = "", y = "Number of secondary infections per day", fill = "") +
geom_text(aes(x = 1, y = 0.8, label = this_status), hjust = 0, size = 6) +
# annotate("text", aes(x= 1, y = 0.8, label = label), data = tibble(label = paste("Index case =", c("any", "patient", "visitor", "healthcare worker"))))
theme(panel.grid = element_blank()
, axis.text.x = element_text(angle = 45, hjust = 1)
, plot.margin = unit(c(1, 1, 1, 1), "cm")
, strip.text = element_blank()
, strip.background.y = element_rect(fill = "white")
, legend.direction = "horizontal", legend.position = "top"
) +
geom_vline(xintercept = seq(0.5, by = 1, length.out = nrow(ward_hop_id)), color="lightgray", size=.5, alpha=.5) # set vertical lines between x groups
# complete_DR_gen$daily_risk %>% range
DR_plot <-
rbind(complete_DR_gen %>% mutate(this_status = "ALL", that_status = "ALL")
, complete_DR_thisstatus %>% mutate(that_status = "ALL")
, complete_DR_status) %>%
# left_join(newID_COVIDstat %>%
#             transmute(ward_id
#                       , newname = newID
#                       # , newname = paste0(newID, "\n(", COVIDstat, ")")
#                       ) %>%
#             mutate(newname = factor(newname, levels = newname))) %>%
mutate_at(c("this_status", "that_status"), function(x) factor(x, levels = c("ALL", "PA", "V", "PE"))) %>%
# mutate_at(c("this_status", "that_status"), function(x) factor(x, labels = c("All", "Patients", "Visitors", "HCWs"))) %>%
mutate_at(c("that_status"), function(x) factor(x, labels = c("All", "Patients", "Visitors", "HCWs"))) %>%
mutate_at(c("this_status"), function(x) factor(x, labels = paste0("Index case = ", c("any", "patient", "visitor", "healthcare worker")))) %>%
ggplot(aes(x = newID, y = daily_risk, fill = that_status)) + geom_bar(stat = "identity", position = "dodge") +
facet_grid(this_status~.) +
scale_fill_manual(values = c(All = "grey70", Patients = "red", Visitors = "black", HCWs = "blue")) +
theme_bw() +
labs(x = "", y = "Number of secondary infections per day", fill = "") +
geom_text(aes(x = 1, y = 0.8, label = this_status), hjust = 0, size = 6) +
# annotate("text", aes(x= 1, y = 0.8, label = label), data = tibble(label = paste("Index case =", c("any", "patient", "visitor", "healthcare worker"))))
theme(panel.grid = element_blank()
, axis.text.x = element_text(angle = 45, hjust = 1)
, plot.margin = unit(c(1, 1, 1, 1), "cm")
, strip.text = element_blank()
, strip.background.y = element_rect(fill = "white")
, legend.direction = "horizontal", legend.position = "top"
) +
geom_vline(xintercept = seq(0.5, by = 1, length.out = 15), color="lightgray", size=.5, alpha=.5) # set vertical lines between x groups
DR_plot
DR_boxplot <- rbind(complete_DR_gen %>% mutate(this_status = "ALL", that_status = "ALL")
, complete_DR_thisstatus %>% mutate(that_status = "ALL")
, complete_DR_status) %>%
mutate_at(c("this_status", "that_status"), function(x) factor(x, levels = c("ALL", "PA", "V", "PE"))) %>%
mutate_at(c("this_status", "that_status"), function(x) factor(x, labels = c("All", "Patients", "Visitors", "HCWs"))) %>%
ggplot(aes(y = daily_risk)) + geom_boxplot() +
facet_grid(this_status~.) +
theme_bw() +
theme(strip.text = element_blank()
, axis.title.y = element_blank()
, axis.text.y = element_blank()
, axis.text.x = element_blank())
DR_barplot_boxplot <- egg::ggarrange(DR_plot, DR_boxplot, ncol = 2, widths = c(20, 3))
source("~/nodscov2_risksim/FIGC_contactPerHourDR.R")
source("~/nodscov2_risksim/FIGB_makeContactPerHourMatrix.R")
source("~/nodscov2_risksim/FIGB_makeContactPerHourMatrix.R")
source("~/nodscov2_risksim/FIGD_simulate_intervention.R")
source("~/nodscov2_risksim/FIGD_simulate_intervention.R")
list_ward$newID %>% unique
cls_piece <- list_ward %>%
filter(newID == ward) %>%
select(from, to) %>%
unique %>%
graph_from_data_frame(directed = F) %>%
closeness %>%
{tibble(id = names(.), closeness = .)}
# closeness
cls = tibble(id = character(0), closeness = numeric(0))
ward_names <- list_ward$newID %>% unique
for(ward in ward_names){
cls_piece <- list_ward %>%
filter(newID == ward) %>%
select(from, to) %>%
unique %>%
graph_from_data_frame(directed = F) %>%
closeness %>%
{tibble(id = names(.), closeness = .)}
cls <- rbind(cls, cls_piece)
}
cls
# combine measures by id
measures_byid = deg %>%
left_join(btw) %>%
left_join(dur) %>%
left_join(cls) %>%
left_join(list_ward_thisthat_saveid %>%
ungroup %>%
transmute(newID, id, this_status, this_catHosp, this_combcatHosp) %>%
unique) %>%
filter(this_catHosp != "investigation")
# rank ids by each measure
percrank <- measures_byid %>%
group_by(newID) %>%
select(-this_status) %>%
mutate(across(.cols = c("degree", "betweenness", "closeness", "hours_in_contact")
# , function(x) rank(x)
, .fns = list(revrandrank = ~rank(-., ties.method = "random"))
))
source("~/nodscov2_risksim/FIGD_simulate_intervention.R")
w_id_numeric = which(w_id_vec == w_id)
source("~/nodscov2_risksim/FIGD_simulate_intervention.R")
timespent_mins
timespent_mins %>% transmute(id, newID, Ttotal = difftime(N2, J1, units = "mins") %>% as.numeric)
#### total duration of study in each ward ####
ward_Ttotal <- timespent_mins %>% transmute(newID, Ttotal = difftime(N2, J1, units = "mins") %>% as.numeric) %>%
select(newID, Ttotal) %>% unique
ward_Ttotal
source("~/nodscov2_risksim/FIGD_simulate_intervention.R")
#### Hbar for each ward  ####
# being average time spent with a captor i.e. on the ward
# standardised to 24 hours
ward_hours2 <- timespent_mins %>%
transmute(id, time_total) %>%
full_join(list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique) %>%
group_by(newID) %>%
summarise(time_total = mean(time_total)) %>%
left_join(ward_Ttotal) %>%
mutate(Hbar = 24/Ttotal*time_total)
ward_hours2
#### Hbar for each ward  ####
# being average time spent with a captor i.e. on the ward
# standardised to 24 hours
ward_hours2 <- timespent_mins %>%
# transmute(id, time_total) %>%
# full_join(list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique) %>%
group_by(newID) %>%
summarise(time_total = mean(time_total)) %>%
left_join(ward_Ttotal) %>%
mutate(Hbar = 24/Ttotal*time_total)
ward_hours2
timespent_mins
timespent_mins %>%
transmute(id, time_total) %>%
full_join(list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique)
timespent_mins %>%
transmute(id, time_total) %>%
full_join(list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique) %>%
group_by(newID) %>%
summarise(time_total = mean(time_total))
timespent_mins %>%
# transmute(id, time_total) %>%
# full_join(list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique) %>%
group_by(newID) %>%
summarise(time_total = mean(time_total))
timespent_mins %>%
left_join(ward_hop_id) %>%
left_join(newID_COVIDstat %>% transmute(ward_id, wardType = DidierName, newID)) %>%
filter(!is.na(newID)) %>%
select(-hosp_ward, -list_ward_name, -ward_id) -> timespent_mins_complete
timespent_mins <- read_csv(file = "input/met_timespent_mins.csv")
ward_hop_id <- read_csv("input/ward_hop_id.csv")
newID_COVIDstat <- read_csv("input/typeID_COVIDstat.csv")
timespent_mins <- read_csv(file = "input/met_timespent_mins.csv")
timespent_mins %>%
left_join(ward_hop_id) %>%
left_join(newID_COVIDstat %>% transmute(ward_id, wardType = DidierName, newID)) %>%
filter(!is.na(newID)) %>%
select(-hosp_ward, -list_ward_name, -ward_id) -> timespent_mins_complete
timespent_mins_complete
timespent_mins_complete %>%
write_csv("input/met_timespent_mins_complete.csv")
#### Hbar for each ward  ####
# being average time spent with a captor i.e. on the ward
# standardised to 24 hours
ward_hours2 <- timespent_mins %>%
# transmute(id, time_total) %>%
# full_join(list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique) %>%
group_by(newID) %>%
summarise(time_total = mean(time_total)) %>%
left_join(ward_Ttotal) %>%
mutate(Hbar = 24/Ttotal*time_total)
timespent_mins
timespent_mins <- read_csv("input/met_timespent_mins_complete.csv")
#### Hbar for each ward  ####
# being average time spent with a captor i.e. on the ward
# standardised to 24 hours
ward_hours2 <- timespent_mins %>%
# transmute(id, time_total) %>%
# full_join(list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique) %>%
group_by(newID) %>%
summarise(time_total = mean(time_total)) %>%
left_join(ward_Ttotal) %>%
mutate(Hbar = 24/Ttotal*time_total)
ward_hours2
#### Hbar for each ward  ####
# being average time spent with a captor i.e. on the ward
# standardised to 24 hours
ward_hours2 <- timespent_mins %>%
transmute(id, time_total) %>%
full_join(list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique) %>%
group_by(newID) %>%
summarise(time_total = mean(time_total)) %>%
left_join(ward_Ttotal) %>%
mutate(Hbar = 24/Ttotal*time_total)
ward_hours2
list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique
#### Hbar for each ward  ####
# being average time spent with a captor i.e. on the ward
# standardised to 24 hours
ward_hours2 <- timespent_mins %>%
transmute(id, time_total) %>%
filter(id %in% list_ward_thisthat_saveid$id) %>%
# full_join(list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique) %>%
group_by(newID) %>%
summarise(time_total = mean(time_total)) %>%
left_join(ward_Ttotal) %>%
mutate(Hbar = 24/Ttotal*time_total)
timespent_mins
timespent_mins %>%
transmute(id, time_total) %>%
filter(id %in% list_ward_thisthat_saveid$id)
#### Hbar for each ward  ####
# being average time spent with a captor i.e. on the ward
# standardised to 24 hours
ward_hours2 <- timespent_mins %>%
transmute(id, newID, time_total) %>%
filter(id %in% list_ward_thisthat_saveid$id) %>%
# full_join(list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique) %>%
group_by(newID) %>%
summarise(time_total = mean(time_total)) %>%
left_join(ward_Ttotal) %>%
mutate(Hbar = 24/Ttotal*time_total)
ward_hours2
#### Hbar for each ward  ####
# being average time spent with a captor i.e. on the ward
# standardised to 24 hours
ward_hours2 <- timespent_mins %>%
transmute(id, newID, time_total) %>%
# filter(id %in% list_ward_thisthat_saveid$id) %>%
full_join(list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique) %>%
group_by(newID) %>%
summarise(time_total = mean(time_total)) %>%
left_join(ward_Ttotal) %>%
mutate(Hbar = 24/Ttotal*time_total)
ward_hours2
#### Hbar for each ward  ####
# being average time spent with a captor i.e. on the ward
# standardised to 24 hours
ward_hours2 <- timespent_mins %>%
# transmute(id, newID, time_total) %>%
transmute(id, time_total) %>%
# filter(id %in% list_ward_thisthat_saveid$id) %>%
full_join(list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique) %>%
filter(!is.na(this_status)) %>%
group_by(newID) %>%
summarise(time_total = mean(time_total)) %>%
left_join(ward_Ttotal) %>%
mutate(Hbar = 24/Ttotal*time_total)
ward_hours2
#### Hbar for each ward  ####
# being average time spent with a captor i.e. on the ward
# standardised to 24 hours
ward_hours2 <- timespent_mins %>%
transmute(id, newID, time_total) %>%
# transmute(id, time_total) %>%
filter(id %in% list_ward_thisthat_saveid$id) %>%
# full_join(list_ward_thisthat_saveid %>% ungroup %>% select(id, newID, this_status) %>% unique) %>%
# filter(!is.na(this_status)) %>%
group_by(newID) %>%
summarise(time_total = mean(time_total)) %>%
left_join(ward_Ttotal) %>%
mutate(Hbar = 24/Ttotal*time_total)
ward_hours2
set.seed(1)
N_IDs = 10
list_ward_complete
list_ward %>%
rbindlist(idcol = "list_ward_name") %>%
left_join(ward_hop_id) %>%
left_join(newID_COVIDstat %>% transmute(ward_id, wardType = DidierName, newID)) %>%
select(-hosp_ward, -list_ward_name) %>%
filter(!is.na(newID)) -> list_ward_complete
load("input/list_ward.RData", verbose = T)
list_ward %>%
rbindlist(idcol = "list_ward_name") %>%
left_join(ward_hop_id) %>%
left_join(newID_COVIDstat %>% transmute(ward_id, wardType = DidierName, newID)) %>%
select(-hosp_ward, -list_ward_name) %>%
filter(!is.na(newID)) -> list_ward_complete
list_ward_complete
set.seed(1)
N_froms = 10
sampled_ids = character(0)
for(ward in unique(list_ward_complete$newID)){
sampled_ids = c(sampled_ids, list_ward_complete %>%
filter(newID == ward) %>%
pull(from) %>%
sample(size = N_froms))
}
sampled_ids
list_ward_complete %>%
filter(from %in% sampled_froms)
set.seed(1)
N_froms = 10
sampled_froms = character(0)
for(ward in unique(list_ward_complete$newID)){
sampled_froms = c(sampled_ids, list_ward_complete %>%
filter(newID == ward) %>%
pull(from) %>%
sample(size = N_froms))
}
list_ward_complete %>%
filter(from %in% sampled_froms)
list_ward_complete %>%
filter(from %in% sampled_froms) %>%
{c(.$from, .$to)}
sampled_ids <- list_ward_complete %>%
filter(from %in% sampled_froms) %>%
{c(.$from, .$to)} %>%
unique
list_ward_partial <- list_ward_complete %>%
filter(from %in% sampled_froms)
load("input/admission_ctc_nodscov2.RData", verbose = T)
admission %>%
left_join(newID_COVIDstat %>% transmute(ward_id, wardType = DidierName, newID)) %>%
select(-hospital, -hosp_ward, -list_ward_name, -ward) -> id_function_complete
id_function_complete %>%
write_csv("input/id_function_complete.csv")
id_function_partial <- id_function_complete %>%
filter(id %in% sampled_ids)
id_function_partial
timespent_mins_partial <- timespent_mins_complete %>%
filter(id %in% sampled_ids)
timespent_mins_partial
list_ward_partial %>%
write_csv("input/list_ward_partial.csv")
id_function_partial %>%
write_csv("input/id_function_partial.csv")
timespent_mins_partial %>%
write_csv("input/timespent_mins_partial.csv")
list_ward_complete
id_function_complete
list_ward_complete %>%
left_join(id_function_complete)
list_ward_complete
id_function_complete
id_function_complete %>% filter(catHosp == "investigation")
invest_ids <- id_function_complete %>% filter(catHosp == "investigation") %>% pull(id)
invest_ids
set.seed(1)
N_froms = 10
sampled_froms = character(0)
invest_ids <- id_function_complete %>% filter(catHosp == "investigation") %>% pull(id)
for(ward in unique(list_ward_complete$newID)){
sampled_froms = c(sampled_ids, list_ward_complete %>%
filter(!(from %in% invest_ids),!(to %in% invest_ids)) %>%
filter(newID == ward) %>%
pull(from) %>%
sample(size = N_froms))
}
list_ward_partial <- list_ward_complete %>%
filter(from %in% sampled_froms)
sampled_ids <- list_ward_partial %>%
{c(.$from, .$to)} %>%
unique
id_function_partial <- id_function_complete %>%
filter(id %in% sampled_ids)
timespent_mins_partial <- timespent_mins_complete %>%
filter(id %in% sampled_ids)
set.seed(1)
N_froms = 10
sampled_froms = character(0)
invest_ids <- id_function_complete %>% filter(catHosp == "investigation") %>% pull(id)
for(ward in unique(list_ward_complete$newID)){
sampled_froms = c(sampled_ids, list_ward_complete %>%
filter(!(from %in% invest_ids),!(to %in% invest_ids)) %>%
filter(newID == ward) %>%
pull(from) %>%
sample(size = N_froms))
}
list_ward_partial <- list_ward_complete %>%
filter(from %in% sampled_froms)
sampled_ids <- list_ward_partial %>%
{c(.$from, .$to)} %>%
unique
id_function_partial <- id_function_complete %>%
filter(id %in% sampled_ids)
timespent_mins_partial <- timespent_mins_complete %>%
filter(id %in% sampled_ids)
list_ward_partial %>%
write_csv("input/list_ward_partial.csv")
id_function_partial %>%
write_csv("input/id_function_partial.csv")
timespent_mins_partial %>%
write_csv("input/timespent_mins_partial.csv")
source("~/nodscov2_risksim/FIGA_plot_network_degree.R")
source("~/nodscov2_risksim/FIGA_plot_network_degree.R")
conn_tibble
conn_tibble <- rbind(conn_tibble
, tibble(newID = ward
, id = V(mygraph)$name
, status = V(mygraph)$status
, catSymbol = V(mygraph)$catSymbol
, degree = degree(mygraph)
, betweenness = betweenness(mygraph)
, closeness = closeness(mygraph)
) %>% left_join(contact_hours %>% select(id, hours_in_contact))
)
source("~/nodscov2_risksim/FIGA_plot_network_degree.R")
list_ward
set.seed(1)
N_froms = 10
sampled_froms = character(0)
invest_ids <- id_function_complete %>% filter(catHosp == "investigation") %>% pull(id)
for(ward in unique(list_ward_complete$newID)){
sampled_froms = c(sampled_ids, list_ward_complete %>%
filter(!(from %in% invest_ids),!(to %in% invest_ids)) %>%
filter(newID == ward) %>%
pull(from) %>%
sample(size = N_froms))
}
list_ward_partial <- list_ward_complete %>%
filter(from %in% sampled_froms)
sampled_ids <- list_ward_partial %>%
{c(.$from, .$to)} %>%
unique
id_function_partial <- id_function_complete %>%
filter(id %in% sampled_ids)
timespent_mins_partial <- timespent_mins_complete %>%
filter(id %in% sampled_ids)
list_ward_complete
list_ward_partial
set.seed(1)
N_froms = 10
sampled_froms = character(0)
invest_ids <- id_function_complete %>% filter(catHosp == "investigation") %>% pull(id)
for(ward in unique(list_ward_complete$newID)){
sampled_froms = c(sampled_froms, list_ward_complete %>%
filter(!(from %in% invest_ids),!(to %in% invest_ids)) %>%
filter(newID == ward) %>%
pull(from) %>%
sample(size = N_froms))
}
list_ward_partial <- list_ward_complete %>%
filter(from %in% sampled_froms)
list_ward_partial
sampled_ids <- list_ward_partial %>%
{c(.$from, .$to)} %>%
unique
id_function_partial <- id_function_complete %>%
filter(id %in% sampled_ids)
timespent_mins_partial <- timespent_mins_complete %>%
filter(id %in% sampled_ids)
list_ward_partial %>%
write_csv("input/list_ward_partial.csv")
id_function_partial %>%
write_csv("input/id_function_partial.csv")
timespent_mins_partial %>%
write_csv("input/timespent_mins_partial.csv")
source("~/nodscov2_risksim/FIGA_plot_network_degree.R")
source("~/nodscov2_risksim/FIGB_makeContactPerHourMatrix.R")
timespent_mins_partial %>%
write_csv("input/met_timespent_mins_partial.csv")
source("~/nodscov2_risksim/FIGB_makeContactPerHourMatrix.R")
source("~/nodscov2_risksim/FIGC_contactPerHourDR.R")
complete_DR_thisstatus %>%
mutate(PED = grepl("Ped", newID) | grepl("Neonat", newID)) %>%
filter(this_status == "V") %>%
group_by(PED) %>%
summarise(range(daily_risk, na.rm = T))
source("~/nodscov2_risksim/FIGC_contactPerHourDR.R")
source("~/nodscov2_risksim/FIGD_simulate_intervention.R")
DR_excl
set.seed(1)
N_froms = 5
sampled_froms = character(0)
invest_ids <- id_function_complete %>% filter(catHosp == "investigation") %>% pull(id)
for(ward in unique(list_ward_complete$newID)){
sampled_froms = c(sampled_froms, list_ward_complete %>%
filter(!(from %in% invest_ids),!(to %in% invest_ids)) %>%
filter(newID == ward) %>%
pull(from) %>%
sample(size = N_froms))
}
list_ward_partial <- list_ward_complete %>%
filter(from %in% sampled_froms)
sampled_ids <- list_ward_partial %>%
{c(.$from, .$to)} %>%
unique
id_function_partial <- id_function_complete %>%
filter(id %in% sampled_ids)
timespent_mins_partial <- timespent_mins_complete %>%
filter(id %in% sampled_ids)
list_ward_partial %>%
write_csv("input/list_ward_partial.csv")
id_function_partial %>%
write_csv("input/id_function_partial.csv")
timespent_mins_partial %>%
write_csv("input/met_timespent_mins_partial.csv")
timespent_mins_partial
id_function_partial
list_ward_partial
source("~/nodscov2_risksim/FIGC_contactPerHourDR.R")
